{"ast":null,"code":"var _jsxFileName = \"D:\\\\TIC5\\\\Programmation Web .Net\\\\Project\\\\trello-app\\\\src\\\\components\\\\forms\\\\addCard.js\";\nimport React from 'react';\nimport { ModalHeader, ModalBody, ModalFooter, Input, Label } from 'reactstrap';\nimport { Add, Close } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, IconButton, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, Slide, FormGroup, InputLabel, FormLabel, RadioGroup, Radio, FormControlLabel } from '@material-ui/core'; //import moment from 'moment'\n//import axios from 'axios'\n\nconst useStyles = makeStyles({\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5'\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)'\n    }\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"'\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3'\n    }\n  }\n});\n\nfunction StyledRadio(props) {\n  const classes = useStyles();\n  return React.createElement(Radio, Object.assign({\n    className: classes.root,\n    disableRipple: true,\n    color: \"default\",\n    checkedIcon: React.createElement(\"span\", {\n      className: (classes.icon, classes.checkedIcon),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }),\n    icon: React.createElement(\"span\", {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n}\n\nclass AddCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeColumnTitle = number => {\n      let newTitle;\n      if (number === \"1\") newTitle = \"Backlog\";else if (number === \"2\") newTitle = \"ToDo\";else if (number === \"3\") newTitle = \"In Progress\";else if (number == \"4\") newTitle = \"Testing\";else newTitle = \"Completed\";\n      return newTitle;\n    };\n\n    this.state = {\n      modal: false,\n      title: '',\n      content: '',\n      contributors: '',\n      createdBy: 'Yasmin Afifi',\n      dueDate: '',\n      status: this.props.status,\n      color: '',\n      listId: this.props.listType,\n      loading: false,\n      users: []\n    }; // this.toggle = this.toggle.bind(this);\n  } // componentDidMount() {\n  //     moment.locale('tr');\n  //     this.changeColumnTitle()\n  // }\n\n\n  handleInput(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log(this.state.dueDate);\n  } // getUsers() {\n  //     axios.get('/users')\n  //         .then((r) => {\n  //             this.setState({\n  //                 users: r.data,\n  //                 err: ''\n  //             })\n  //         })\n  //         .then((r) => {\n  //             console.log(this.state.users)\n  //         })\n  //         .catch((e) => {\n  //             this.setState({\n  //                 err: e\n  //             })\n  //         })\n  // }\n  // handleClick = event => {\n  //     axios.post('/cards', {\n  //         title: this.state.title,\n  //         content: this.state.content,\n  //         status: this.props.status,\n  //         contributors: this.state.contributors,\n  //         dueDate: this.state.dueDate,\n  //         color: this.state.color,\n  //         listId: this.state.listId,\n  //         createdBy: this.state.createdBy\n  //     })\n  //         .then((response) => {\n  //             if (response.data.message)\n  //                 alert(response.data.message)\n  //             else {\n  //                 this.toggle();\n  //                 this.setState({\n  //                     title: null,\n  //                     content: null,\n  //                     contributors: null,\n  //                     dueDate: null,\n  //                     loading: false\n  //                 })\n  //             }\n  //             console.log(response);\n  //         })\n  //         .catch((error) => {\n  //             console.log(error);\n  //         });\n  // }\n  // toggle() {\n  //     this.getUsers();\n  //     this.setState({\n  //         modal: !this.state.modal\n  //     });\n  // }\n\n\n  render() {\n    // const { users } = this.state;\n    let userContent; // if (!users)\n    //     userContent = <option value=\"\">Loading...</option>\n    // else {\n    //     userContent = users.map((user, index) => (\n    //         <option key={index} value={user._id}>{user.name + \" \" + user.lastName}</option>\n    //     ))\n    // }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      size: \"small\",\n      variant: \"contained\",\n      color: \"default\"\n      /*onClick={this.toggle}*/\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Add, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      keepMounted: true,\n      open: this.state.modal,\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Create a New Card to \", this.changeColumnTitle(this.props.status)), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Card Title(*):\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"title\",\n      id: \"CardTitle\",\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Card Details:\"), React.createElement(Input, {\n      type: \"textarea\",\n      name: \"content\",\n      id: \"content\",\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"contributors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Assign to:\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"contributors\",\n      id: \"contributors\",\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Choose:\"), userContent)), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      component: \"fieldset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      component: \"color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Card Color:\"), React.createElement(RadioGroup, {\n      \"aria-label\": \"color\",\n      type: \"select\",\n      name: \"color\",\n      id: \"color\",\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      value: \"\",\n      label: \"Choose:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      value: \"colorBlue\",\n      control: React.createElement(StyledRadio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }),\n      label: \"Blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      value: \"colorGreen\",\n      control: React.createElement(StyledRadio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }),\n      label: \"Green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      value: \"colorYellow\",\n      control: React.createElement(StyledRadio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }),\n      label: \"Yellow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      value: \"colorRed\",\n      control: React.createElement(StyledRadio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }),\n      label: \"Red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cardClock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), \" Due Date: \", React.createElement(\"input\", {\n      name: \"dueDate\",\n      id: \"dueDate\",\n      type: \"datetime-local\",\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"default\"\n      /*onClick={this.handleClick.bind(this)}*/\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Add, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), \"Add\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Close, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), \"Close\"))));\n  }\n\n}\n\nexport default AddCard;","map":{"version":3,"sources":["D:/TIC5/Programmation Web .Net/Project/trello-app/src/components/forms/addCard.js"],"names":["React","ModalHeader","ModalBody","ModalFooter","Input","Label","Add","Close","makeStyles","Button","IconButton","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","Slide","FormGroup","InputLabel","FormLabel","RadioGroup","Radio","FormControlLabel","useStyles","icon","borderRadius","width","height","boxShadow","backgroundColor","backgroundImage","outline","outlineOffset","background","checkedIcon","display","content","StyledRadio","props","classes","root","AddCard","Component","constructor","changeColumnTitle","number","newTitle","state","modal","title","contributors","createdBy","dueDate","status","color","listId","listType","loading","users","handleInput","e","setState","target","name","value","console","log","render","userContent","className","toggle","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ModalHeader, ModalBody, ModalFooter, Input, Label } from 'reactstrap';\r\nimport { Add, Close } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Button, IconButton, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, Slide, FormGroup, InputLabel, FormLabel, RadioGroup, Radio, FormControlLabel } from '@material-ui/core';\r\n\r\n\r\n//import moment from 'moment'\r\n//import axios from 'axios'\r\n\r\nconst useStyles = makeStyles({\r\n    icon: {\r\n        borderRadius: '50%',\r\n        width: 16,\r\n        height: 16,\r\n        boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\r\n        backgroundColor: '#f5f8fa',\r\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\r\n        '$root.Mui-focusVisible &': {\r\n            outline: '2px auto rgba(19,124,189,.6)',\r\n            outlineOffset: 2,\r\n        },\r\n        'input:hover ~ &': {\r\n            backgroundColor: '#ebf1f5',\r\n        },\r\n        'input:disabled ~ &': {\r\n            boxShadow: 'none',\r\n            background: 'rgba(206,217,224,.5)',\r\n        },\r\n    },\r\n    checkedIcon: {\r\n        backgroundColor: '#137cbd',\r\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\r\n        '&:before': {\r\n            display: 'block',\r\n            width: 16,\r\n            height: 16,\r\n            backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\r\n            content: '\"\"',\r\n        },\r\n        'input:hover ~ &': {\r\n            backgroundColor: '#106ba3',\r\n        },\r\n    },\r\n});\r\nfunction StyledRadio(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Radio\r\n            className={classes.root}\r\n            disableRipple\r\n            color=\"default\"\r\n            checkedIcon={<span className={classes.icon, classes.checkedIcon} />}\r\n            icon={<span className={classes.icon} />}\r\n            {...props}\r\n        />\r\n    );\r\n}\r\n\r\n\r\n\r\nclass AddCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false,\r\n            title: '',\r\n            content: '',\r\n            contributors: '',\r\n            createdBy: 'Yasmin Afifi',\r\n            dueDate: '',\r\n            status: this.props.status,\r\n            color: '',\r\n            listId: this.props.listType,\r\n            loading: false,\r\n            users: []\r\n        };\r\n        // this.toggle = this.toggle.bind(this);\r\n    }\r\n    // componentDidMount() {\r\n    //     moment.locale('tr');\r\n    //     this.changeColumnTitle()\r\n    // }\r\n    changeColumnTitle = number => {\r\n        let newTitle;\r\n        if (number === \"1\")\r\n            newTitle = \"Backlog\"\r\n        else if (number === \"2\")\r\n            newTitle = \"ToDo\"\r\n        else if (number === \"3\")\r\n            newTitle = \"In Progress\"\r\n        else if (number == \"4\")\r\n            newTitle = \"Testing\"\r\n        else\r\n            newTitle = \"Completed\"\r\n\r\n        return newTitle;\r\n    }\r\n    handleInput(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n        console.log(this.state.dueDate)\r\n    }\r\n    // getUsers() {\r\n    //     axios.get('/users')\r\n    //         .then((r) => {\r\n    //             this.setState({\r\n    //                 users: r.data,\r\n    //                 err: ''\r\n    //             })\r\n    //         })\r\n    //         .then((r) => {\r\n    //             console.log(this.state.users)\r\n    //         })\r\n    //         .catch((e) => {\r\n    //             this.setState({\r\n    //                 err: e\r\n    //             })\r\n    //         })\r\n    // }\r\n    // handleClick = event => {\r\n    //     axios.post('/cards', {\r\n    //         title: this.state.title,\r\n    //         content: this.state.content,\r\n    //         status: this.props.status,\r\n    //         contributors: this.state.contributors,\r\n    //         dueDate: this.state.dueDate,\r\n    //         color: this.state.color,\r\n    //         listId: this.state.listId,\r\n    //         createdBy: this.state.createdBy\r\n    //     })\r\n    //         .then((response) => {\r\n    //             if (response.data.message)\r\n    //                 alert(response.data.message)\r\n    //             else {\r\n    //                 this.toggle();\r\n    //                 this.setState({\r\n    //                     title: null,\r\n    //                     content: null,\r\n    //                     contributors: null,\r\n    //                     dueDate: null,\r\n    //                     loading: false\r\n    //                 })\r\n    //             }\r\n    //             console.log(response);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.log(error);\r\n    //         });\r\n\r\n    // }\r\n    // toggle() {\r\n    //     this.getUsers();\r\n    //     this.setState({\r\n    //         modal: !this.state.modal\r\n    //     });\r\n    // }\r\n    render() {\r\n        // const { users } = this.state;\r\n        let userContent;\r\n        // if (!users)\r\n        //     userContent = <option value=\"\">Loading...</option>\r\n        // else {\r\n        //     userContent = users.map((user, index) => (\r\n        //         <option key={index} value={user._id}>{user.name + \" \" + user.lastName}</option>\r\n        //     ))\r\n        // }\r\n        return (\r\n            <div>\r\n                <IconButton size=\"small\" variant=\"contained\" color=\"default\" /*onClick={this.toggle}*/><Add /></IconButton>\r\n                <Dialog keepMounted open={this.state.modal} className={this.props.className} >\r\n                    <DialogTitle toggle={this.toggle} >\r\n                        Create a New Card to {this.changeColumnTitle(this.props.status)}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <FormGroup>\r\n                            <Label for=\"title\">Card Title(*):</Label><Input type=\"text\" name=\"title\" id=\"CardTitle\" onChange={this.handleInput.bind(this)} /></FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"content\">Card Details:</Label>\r\n                            <Input type=\"textarea\" name=\"content\" id=\"content\" onChange={this.handleInput.bind(this)} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"contributors\">Assign to:</Label>\r\n                            <Input type=\"select\" name=\"contributors\" id=\"contributors\" onChange={this.handleInput.bind(this)}>\r\n                                <option value=\"\">Choose:</option>\r\n                                {userContent}\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <FormControl component=\"fieldset\">\r\n                                <FormLabel component=\"color\">Card Color:</FormLabel>\r\n                                <RadioGroup aria-label=\"color\" type=\"select\" name=\"color\" id=\"color\" onChange={this.handleInput.bind(this)}>\r\n                                    <FormControlLabel value=\"\" label=\"Choose:\" />\r\n                                    <FormControlLabel value=\"colorBlue\" control={<StyledRadio />} label=\"Blue\" />\r\n                                    <FormControlLabel value=\"colorGreen\" control={<StyledRadio />} label=\"Green\" />\r\n                                    <FormControlLabel value=\"colorYellow\" control={<StyledRadio />} label=\"Yellow\" />\r\n                                    <FormControlLabel value=\"colorRed\" control={<StyledRadio />} label=\"Red\" />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </FormGroup>\r\n                        <hr />\r\n                        {/* <i className=\"cardCalendar\"></i> Created Date: {moment().format('L, h:mm:ss')} <br /> */}\r\n                        <i className=\"cardClock\"></i> Due Date: <input name=\"dueDate\" id=\"dueDate\" type=\"datetime-local\" onChange={this.handleInput.bind(this)} />\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n\r\n                        <Button variant=\"contained\" color=\"default\" /*onClick={this.handleClick.bind(this)}*/><Add />Add</Button>\r\n                        <Button variant=\"contained\" color=\"default\" onClick={this.toggle}><Close />Close</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default AddCard;"]},"metadata":{},"sourceType":"module"}