{"ast":null,"code":"var _jsxFileName = \"D:\\\\TIC5\\\\Programmation Web .Net\\\\Project\\\\trello-app\\\\src\\\\components\\\\modal.js\";\nimport React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, FormGroup, Label } from 'reactstrap';\nimport moment from 'moment'; //import axios from 'axios'\n\nclass ModalProject extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      title: this.props.propContent.title,\n      content: this.props.propContent.content,\n      status: this.props.propContent.status,\n      color: this.props.propContent.color\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log(this.state.title);\n  } // handleClick = id => {\n  //     axios.put(`/cards/update/${id}`, {\n  //         title: this.state.title,\n  //         content: this.state.content,\n  //         status: this.state.status\n  //     })\n  //         .then((response) => {\n  //             if (response.data.message)\n  //                 alert(response.data.message)\n  //             else {\n  //                 this.toggle();\n  //                 this.setState({\n  //                     title: null,\n  //                     content: null,\n  //                     loading: false\n  //                 })\n  //             }\n  //             console.log(response);\n  //         })\n  //         .catch((error) => {\n  //             console.log(error);\n  //         });\n  // }\n  // toggle() {\n  //     this.setState({\n  //         modal: !this.state.modal\n  //     });\n  // }\n\n\n  render() {\n    let _this$state = this.state,\n        title = _this$state.title,\n        content = _this$state.content,\n        status = _this$state.status;\n    const _this$props = this.props,\n          propContent = _this$props.propContent,\n          classType = _this$props.classType;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      size: \"sm\",\n      className: classType,\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-arrow-alt-circle-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Card Title:\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"title\",\n      value: title,\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Card Details:\"), React.createElement(Input, {\n      type: \"textarea\",\n      name: \"content\",\n      value: content,\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(Label, {\n      for: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Status:\"), React.createElement(Input, {\n      type: \"select\",\n      value: status,\n      name: \"status\",\n      id: \"status\",\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Backlog\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Todo\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"In Progress\"), React.createElement(\"option\", {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Testing\"), React.createElement(\"option\", {\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Completed\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cardCalendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), \" Created Date: \", moment(propContent.date).format(\"DD.MM.YYYY\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cardClock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), \" Due Date: \", moment(propContent.dueDate).format(\"DD.MM.YYYY\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"boardUser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), \" Created by: \", propContent.createdBy), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      height: \"35\",\n      alt: propContent.contributors[0].name + ' ' + propContent.contributors[0].lastName,\n      title: propContent.contributors[0].name + ' ' + propContent.contributors[0].lastName,\n      src: '../../public/assets/img' + propContent.contributors[0].profilePhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.handleClick(propContent._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Update\"), React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\nexport default ModalProject;","map":{"version":3,"sources":["D:/TIC5/Programmation Web .Net/Project/trello-app/src/components/modal.js"],"names":["React","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","FormGroup","Label","moment","ModalProject","Component","constructor","props","state","modal","title","propContent","content","status","color","toggle","bind","handleInput","e","setState","target","name","value","console","log","render","classType","className","date","format","dueDate","createdBy","contributors","lastName","profilePhoto","handleClick","_id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, FormGroup, Label } from 'reactstrap';\r\nimport moment from 'moment'\r\n//import axios from 'axios'\r\n\r\nclass ModalProject extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false,\r\n            title: this.props.propContent.title,\r\n            content: this.props.propContent.content,\r\n            status: this.props.propContent.status,\r\n            color: this.props.propContent.color\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n    handleInput(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n        console.log(this.state.title)\r\n    }\r\n    // handleClick = id => {\r\n    //     axios.put(`/cards/update/${id}`, {\r\n    //         title: this.state.title,\r\n    //         content: this.state.content,\r\n    //         status: this.state.status\r\n    //     })\r\n    //         .then((response) => {\r\n    //             if (response.data.message)\r\n    //                 alert(response.data.message)\r\n    //             else {\r\n    //                 this.toggle();\r\n    //                 this.setState({\r\n    //                     title: null,\r\n    //                     content: null,\r\n    //                     loading: false\r\n    //                 })\r\n    //             }\r\n    //             console.log(response);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.log(error);\r\n    //         });\r\n\r\n    // }\r\n    // toggle() {\r\n    //     this.setState({\r\n    //         modal: !this.state.modal\r\n    //     });\r\n    // }\r\n    render() {\r\n        let { title, content, status } = this.state;\r\n        const { propContent, classType } = this.props;\r\n        return (\r\n            <div>\r\n                <Button color=\"primary\" size=\"sm\" className={classType} onClick={this.toggle}><i className=\"fas fa-arrow-alt-circle-right\" /></Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n                    <ModalHeader toggle={this.toggle}>\r\n                        <Label for=\"title\">Card Title:</Label><Input type=\"text\" name=\"title\" value={title} onChange={this.handleInput.bind(this)} />\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <Label for=\"content\">Card Details:</Label>\r\n                            <Input type=\"textarea\" name=\"content\" value={content} onChange={this.handleInput.bind(this)} />\r\n                        </FormGroup>\r\n                        <Label for=\"status\">Status:</Label>\r\n                        <Input type=\"select\" value={status} name=\"status\" id=\"status\" onChange={this.handleInput.bind(this)}>\r\n                            <option value=\"1\">Backlog</option>\r\n                            <option value=\"2\">Todo</option>\r\n                            <option value=\"3\">In Progress</option>\r\n                            <option value=\"4\">Testing</option>\r\n                            <option value=\"5\">Completed</option>\r\n                        </Input>\r\n                        <hr />\r\n                        <i className=\"cardCalendar\"></i> Created Date: {moment(propContent.date).format(\"DD.MM.YYYY\")}<br />\r\n                        <i className=\"cardClock\"></i> Due Date: {moment(propContent.dueDate).format(\"DD.MM.YYYY\")}<br />\r\n                        <i className=\"boardUser\"></i> Created by: {propContent.createdBy}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <img height=\"35\" alt={propContent.contributors[0].name + ' ' + propContent.contributors[0].lastName} title={propContent.contributors[0].name + ' ' + propContent.contributors[0].lastName} src={'../../public/assets/img' + propContent.contributors[0].profilePhoto} />\r\n                        <Button color=\"primary\" onClick={() => this.handleClick(propContent._id)}>Update</Button>\r\n                        <Button color=\"secondary\" onClick={this.toggle}>Close</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default ModalProject;"]},"metadata":{},"sourceType":"module"}