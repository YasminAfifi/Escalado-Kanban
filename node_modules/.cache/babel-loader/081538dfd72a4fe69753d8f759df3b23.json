{"ast":null,"code":"import _slicedToArray from \"D:\\\\TIC5\\\\Programmation Web .Net\\\\Project\\\\trello-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\TIC5\\\\Programmation Web .Net\\\\Project\\\\trello-app\\\\src\\\\components\\\\forms\\\\addList.js\";\nimport React from 'react';\nimport { Input, FormGroup, Label } from 'reactstrap';\nimport Button from '@material-ui/core/Button';\nimport { Add, Close } from '@material-ui/icons';\nimport { Dialog, DialogActions, DialogContent, DialogTitle, Slide } from '@material-ui/core'; //import axios from 'axios'\n\nclass AddList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.state = {\n      modal: false,\n      title: '',\n      createdBy: '',\n      count: 2\n    }; //this.toggle = this.toggle.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log(this.state.dueDate);\n  } // getListCount = () => {\n  //     axios.get(`/list/count`)\n  //         .then((r) => {\n  //             this.setState({\n  //                 count: r.data.count,\n  //                 err: ''\n  //             })\n  //         })\n  //         .catch((e) => {\n  //             this.setState({\n  //                 err: e\n  //             })\n  //         })\n  // }\n  // handleClick = event => {\n  //     this.getStoryCount()\n  //     axios.post('/list', {\n  //         title: this.state.title,\n  //         createdBy: this.state.createdBy,\n  //         listId: this.state.count\n  //     })\n  //         .then((response) => {\n  //             if (response.data.error)\n  //                 alert(response.data.error)\n  //             else {\n  //                 this.toggle();\n  //                 this.setState({\n  //                     title: null,\n  //                     createdBy: null,\n  //                     listId: null,\n  //                     loading: false\n  //                 })\n  //             }\n  //             console.log(response);\n  //         })\n  //         .catch((error) => {\n  //             console.log(error);\n  //         });\n  // }\n  // toggle() {\n  //     this.setState({\n  //         modal: !this.state.modal\n  //     });\n  // }\n\n\n  render() {\n    const Transition = React.forwardRef(function Transition(props, ref) {\n      return React.createElement(Slide, {\n        direction: \"up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    });\n\n    const _React$useState = React.useState(false),\n          _React$useState2 = _slicedToArray(_React$useState, 1),\n          setOpen = _React$useState2[0];\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Add, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), \"New Project\"), React.createElement(Dialog, {\n      TransitionComponent: Transition,\n      keepMounted: true,\n      open: this.state.open,\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Add List\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"List Title(*):\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"title\",\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"createdBy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Created by(*):\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"createdBy\",\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Add, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), \"Add\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      onClick: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Close, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), \"Close\"))));\n  }\n\n}\n\nexport default AddList;","map":{"version":3,"sources":["D:/TIC5/Programmation Web .Net/Project/trello-app/src/components/forms/addList.js"],"names":["React","Input","FormGroup","Label","Button","Add","Close","Dialog","DialogActions","DialogContent","DialogTitle","Slide","AddList","Component","constructor","props","handleChange","event","setState","name","target","value","state","modal","title","createdBy","count","handleInput","e","console","log","dueDate","render","Transition","forwardRef","ref","useState","setOpen","handleClickOpen","handleClose","toggle","open","className","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Input, FormGroup, Label } from 'reactstrap';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Add, Close } from '@material-ui/icons';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, Slide } from '@material-ui/core';\r\n//import axios from 'axios'\r\n\r\nclass AddList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false,\r\n            title: '',\r\n            createdBy: '',\r\n            count: 2\r\n        };\r\n\r\n        //this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n    handleInput(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n        console.log(this.state.dueDate)\r\n    }\r\n    // getListCount = () => {\r\n    //     axios.get(`/list/count`)\r\n    //         .then((r) => {\r\n    //             this.setState({\r\n    //                 count: r.data.count,\r\n    //                 err: ''\r\n    //             })\r\n    //         })\r\n    //         .catch((e) => {\r\n    //             this.setState({\r\n    //                 err: e\r\n    //             })\r\n    //         })\r\n    // }\r\n    // handleClick = event => {\r\n    //     this.getStoryCount()\r\n    //     axios.post('/list', {\r\n    //         title: this.state.title,\r\n    //         createdBy: this.state.createdBy,\r\n    //         listId: this.state.count\r\n    //     })\r\n    //         .then((response) => {\r\n    //             if (response.data.error)\r\n    //                 alert(response.data.error)\r\n    //             else {\r\n    //                 this.toggle();\r\n    //                 this.setState({\r\n    //                     title: null,\r\n    //                     createdBy: null,\r\n    //                     listId: null,\r\n    //                     loading: false\r\n    //                 })\r\n    //             }\r\n    //             console.log(response);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.log(error);\r\n    //         });\r\n    // }\r\n    // toggle() {\r\n    //     this.setState({\r\n    //         modal: !this.state.modal\r\n    //     });\r\n    // }\r\n    render() {\r\n        const Transition = React.forwardRef(function Transition(props, ref) {\r\n            return <Slide direction=\"up\" />;\r\n        });\r\n        const [setOpen] = React.useState(false);\r\n\r\n        const handleClickOpen = () => {\r\n            setOpen(true);\r\n        };\r\n\r\n        const handleClose = () => {\r\n            setOpen(false);\r\n        };\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Button variant=\"contained\" color=\"default\" onClick={this.toggle}><Add />New Project</Button>\r\n                <Dialog TransitionComponent={Transition} keepMounted open={this.state.open} className={this.props.className} >\r\n                    <DialogTitle>\r\n                        Add List\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n\r\n                        <FormGroup><Label for=\"title\">List Title(*):</Label><Input type=\"text\" name=\"title\" onChange={this.handleInput.bind(this)} /></FormGroup>\r\n                        <FormGroup><Label for=\"createdBy\">Created by(*):</Label><Input type=\"text\" name=\"createdBy\" onChange={this.handleInput.bind(this)} /></FormGroup>\r\n\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"default\" onClick={this.toggle}><Add />Add</Button>\r\n                        <Button variant=\"contained\" color=\"default\" onClick={handleClose}><Close />Close</Button>\r\n                    </DialogActions>\r\n\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default AddList;"]},"metadata":{},"sourceType":"module"}