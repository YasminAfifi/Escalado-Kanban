{"ast":null,"code":"var _jsxFileName = \"D:\\\\TIC5\\\\Programmation Web .Net\\\\Project\\\\trello-app\\\\src\\\\components\\\\forms\\\\addCard.js\";\nimport React from 'react';\nimport { ModalHeader, ModalBody, ModalFooter, Input, Label } from 'reactstrap';\nimport { Add, Close } from '@material-ui/icons';\nimport { Button, IconButton, Dialog, DialogActions, DialogContent, DialogTitle, Slide, FormGroup } from '@material-ui/core'; //import moment from 'moment'\n//import axios from 'axios'\n\nclass AddCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeColumnTitle = number => {\n      let newTitle;\n      if (number === \"1\") newTitle = \"Backlog\";else if (number === \"2\") newTitle = \"ToDo\";else if (number === \"3\") newTitle = \"In Progress\";else if (number == \"4\") newTitle = \"Testing\";else newTitle = \"Completed\";\n      return newTitle;\n    };\n\n    this.state = {\n      modal: false,\n      title: '',\n      content: '',\n      contributors: '',\n      createdBy: 'Yasmin Afifi',\n      dueDate: '',\n      status: this.props.status,\n      color: '',\n      listId: this.props.listType,\n      loading: false,\n      users: []\n    }; // this.toggle = this.toggle.bind(this);\n  } // componentDidMount() {\n  //     moment.locale('tr');\n  //     this.changeColumnTitle()\n  // }\n\n\n  handleInput(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log(this.state.dueDate);\n  } // getUsers() {\n  //     axios.get('/users')\n  //         .then((r) => {\n  //             this.setState({\n  //                 users: r.data,\n  //                 err: ''\n  //             })\n  //         })\n  //         .then((r) => {\n  //             console.log(this.state.users)\n  //         })\n  //         .catch((e) => {\n  //             this.setState({\n  //                 err: e\n  //             })\n  //         })\n  // }\n  // handleClick = event => {\n  //     axios.post('/cards', {\n  //         title: this.state.title,\n  //         content: this.state.content,\n  //         status: this.props.status,\n  //         contributors: this.state.contributors,\n  //         dueDate: this.state.dueDate,\n  //         color: this.state.color,\n  //         listId: this.state.listId,\n  //         createdBy: this.state.createdBy\n  //     })\n  //         .then((response) => {\n  //             if (response.data.message)\n  //                 alert(response.data.message)\n  //             else {\n  //                 this.toggle();\n  //                 this.setState({\n  //                     title: null,\n  //                     content: null,\n  //                     contributors: null,\n  //                     dueDate: null,\n  //                     loading: false\n  //                 })\n  //             }\n  //             console.log(response);\n  //         })\n  //         .catch((error) => {\n  //             console.log(error);\n  //         });\n  // }\n  // toggle() {\n  //     this.getUsers();\n  //     this.setState({\n  //         modal: !this.state.modal\n  //     });\n  // }\n\n\n  render() {\n    // const { users } = this.state;\n    let userContent; // if (!users)\n    //     userContent = <option value=\"\">Loading...</option>\n    // else {\n    //     userContent = users.map((user, index) => (\n    //         <option key={index} value={user._id}>{user.name + \" \" + user.lastName}</option>\n    //     ))\n    // }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      size: \"small\",\n      variant: \"contained\",\n      color: \"default\"\n      /*onClick={this.toggle}*/\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Add, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      keepMounted: true,\n      open: this.state.modal,\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Create a New Card to \", this.changeColumnTitle(this.props.status)), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Card Title(*):\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"title\",\n      id: \"CardTitle\",\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Card Details:\"), React.createElement(Input, {\n      type: \"textarea\",\n      name: \"content\",\n      id: \"content\",\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"contributors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Assign to:\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"contributors\",\n      id: \"contributors\",\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Choose:\"), userContent)), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Card Color:\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"color\",\n      id: \"color\",\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Choose:\"), React.createElement(\"option\", {\n      value: \"colorBlue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Blue\"), React.createElement(\"option\", {\n      value: \"colorGreen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Green\"), React.createElement(\"option\", {\n      value: \"colorYellow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Yellow\"), React.createElement(\"option\", {\n      value: \"colorRed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Red\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cardClock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), \" Due Date: \", React.createElement(\"input\", {\n      name: \"dueDate\",\n      id: \"dueDate\",\n      type: \"datetime-local\",\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"default\"\n      /*onClick={this.handleClick.bind(this)}*/\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Add, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), \"Add\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Close, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), \"Close\"))));\n  }\n\n}\n\nexport default AddCard;","map":{"version":3,"sources":["D:/TIC5/Programmation Web .Net/Project/trello-app/src/components/forms/addCard.js"],"names":["React","ModalHeader","ModalBody","ModalFooter","Input","Label","Add","Close","Button","IconButton","Dialog","DialogActions","DialogContent","DialogTitle","Slide","FormGroup","AddCard","Component","constructor","props","changeColumnTitle","number","newTitle","state","modal","title","content","contributors","createdBy","dueDate","status","color","listId","listType","loading","users","handleInput","e","setState","target","name","value","console","log","render","userContent","className","toggle","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ModalHeader, ModalBody, ModalFooter, Input, Label } from 'reactstrap';\r\nimport { Add, Close } from '@material-ui/icons';\r\nimport { Button, IconButton, Dialog, DialogActions, DialogContent, DialogTitle, Slide, FormGroup } from '@material-ui/core';\r\n\r\n\r\n//import moment from 'moment'\r\n//import axios from 'axios'\r\n\r\n\r\nclass AddCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false,\r\n            title: '',\r\n            content: '',\r\n            contributors: '',\r\n            createdBy: 'Yasmin Afifi',\r\n            dueDate: '',\r\n            status: this.props.status,\r\n            color: '',\r\n            listId: this.props.listType,\r\n            loading: false,\r\n            users: []\r\n        };\r\n        // this.toggle = this.toggle.bind(this);\r\n    }\r\n    // componentDidMount() {\r\n    //     moment.locale('tr');\r\n    //     this.changeColumnTitle()\r\n    // }\r\n    changeColumnTitle = number => {\r\n        let newTitle;\r\n        if (number === \"1\")\r\n            newTitle = \"Backlog\"\r\n        else if (number === \"2\")\r\n            newTitle = \"ToDo\"\r\n        else if (number === \"3\")\r\n            newTitle = \"In Progress\"\r\n        else if (number == \"4\")\r\n            newTitle = \"Testing\"\r\n        else\r\n            newTitle = \"Completed\"\r\n\r\n        return newTitle;\r\n    }\r\n    handleInput(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n        console.log(this.state.dueDate)\r\n    }\r\n    // getUsers() {\r\n    //     axios.get('/users')\r\n    //         .then((r) => {\r\n    //             this.setState({\r\n    //                 users: r.data,\r\n    //                 err: ''\r\n    //             })\r\n    //         })\r\n    //         .then((r) => {\r\n    //             console.log(this.state.users)\r\n    //         })\r\n    //         .catch((e) => {\r\n    //             this.setState({\r\n    //                 err: e\r\n    //             })\r\n    //         })\r\n    // }\r\n    // handleClick = event => {\r\n    //     axios.post('/cards', {\r\n    //         title: this.state.title,\r\n    //         content: this.state.content,\r\n    //         status: this.props.status,\r\n    //         contributors: this.state.contributors,\r\n    //         dueDate: this.state.dueDate,\r\n    //         color: this.state.color,\r\n    //         listId: this.state.listId,\r\n    //         createdBy: this.state.createdBy\r\n    //     })\r\n    //         .then((response) => {\r\n    //             if (response.data.message)\r\n    //                 alert(response.data.message)\r\n    //             else {\r\n    //                 this.toggle();\r\n    //                 this.setState({\r\n    //                     title: null,\r\n    //                     content: null,\r\n    //                     contributors: null,\r\n    //                     dueDate: null,\r\n    //                     loading: false\r\n    //                 })\r\n    //             }\r\n    //             console.log(response);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.log(error);\r\n    //         });\r\n\r\n    // }\r\n    // toggle() {\r\n    //     this.getUsers();\r\n    //     this.setState({\r\n    //         modal: !this.state.modal\r\n    //     });\r\n    // }\r\n    render() {\r\n        // const { users } = this.state;\r\n        let userContent;\r\n        // if (!users)\r\n        //     userContent = <option value=\"\">Loading...</option>\r\n        // else {\r\n        //     userContent = users.map((user, index) => (\r\n        //         <option key={index} value={user._id}>{user.name + \" \" + user.lastName}</option>\r\n        //     ))\r\n        // }\r\n        return (\r\n            <div>\r\n                <IconButton size=\"small\" variant=\"contained\" color=\"default\" /*onClick={this.toggle}*/><Add /></IconButton>\r\n                <Dialog keepMounted open={this.state.modal} className={this.props.className} >\r\n                    <DialogTitle toggle={this.toggle} >\r\n                        Create a New Card to {this.changeColumnTitle(this.props.status)}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <FormGroup>\r\n                            <Label for=\"title\">Card Title(*):</Label><Input type=\"text\" name=\"title\" id=\"CardTitle\" onChange={this.handleInput.bind(this)} /></FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"content\">Card Details:</Label>\r\n                            <Input type=\"textarea\" name=\"content\" id=\"content\" onChange={this.handleInput.bind(this)} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"contributors\">Assign to:</Label>\r\n                            <Input type=\"select\" name=\"contributors\" id=\"contributors\" onChange={this.handleInput.bind(this)}>\r\n                                <option value=\"\">Choose:</option>\r\n                                {userContent}\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"color\">Card Color:</Label>\r\n                            <Input type=\"select\" name=\"color\" id=\"color\" onChange={this.handleInput.bind(this)}>\r\n                                <option value=\"\">Choose:</option>\r\n                                <option value=\"colorBlue\">Blue</option>\r\n                                <option value=\"colorGreen\">Green</option>\r\n                                <option value=\"colorYellow\">Yellow</option>\r\n                                <option value=\"colorRed\">Red</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <hr />\r\n                        {/* <i className=\"cardCalendar\"></i> Created Date: {moment().format('L, h:mm:ss')} <br /> */}\r\n                        <i className=\"cardClock\"></i> Due Date: <input name=\"dueDate\" id=\"dueDate\" type=\"datetime-local\" onChange={this.handleInput.bind(this)} />\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n\r\n                        <Button variant=\"contained\" color=\"default\" /*onClick={this.handleClick.bind(this)}*/><Add />Add</Button>\r\n                        <Button variant=\"contained\" color=\"default\" onClick={this.toggle}><Close />Close</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default AddCard;"]},"metadata":{},"sourceType":"module"}