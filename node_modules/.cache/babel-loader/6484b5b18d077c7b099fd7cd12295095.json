{"ast":null,"code":"var _jsxFileName = \"D:\\\\TIC5\\\\Programmation Web .Net\\\\Project\\\\trello-app\\\\src\\\\components\\\\modal.js\";\nimport React from 'react';\nimport { Add, Close, CalendarToday, Schedule, DoubleArrow, Update, AssignmentInd } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, IconButton, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, Slide, FormGroup, FormLabel, RadioGroup, Radio, FormControlLabel, TextField } from '@material-ui/core'; //import moment from 'moment'\n//import axios from 'axios'\n\nfunction StyledRadio(props) {\n  return React.createElement(Radio, Object.assign({\n    disableRipple: true,\n    color: \"default\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n}\n\nclass ModalProject extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      title: this.props.propContent.title,\n      content: this.props.propContent.content,\n      status: this.props.propContent.status,\n      color: this.props.propContent.color\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log(this.state.title);\n  } // handleClick = id => {\n  //     axios.put(`/cards/update/${id}`, {\n  //         title: this.state.title,\n  //         content: this.state.content,\n  //         status: this.state.status\n  //     })\n  //         .then((response) => {\n  //             if (response.data.message)\n  //                 alert(response.data.message)\n  //             else {\n  //                 this.toggle();\n  //                 this.setState({\n  //                     title: null,\n  //                     content: null,\n  //                     loading: false\n  //                 })\n  //             }\n  //             console.log(response);\n  //         })\n  //         .catch((error) => {\n  //             console.log(error);\n  //         });\n  // }\n  // toggle() {\n  //     this.setState({\n  //         modal: !this.state.modal\n  //     });\n  // }\n\n\n  render() {\n    let _this$state = this.state,\n        title = _this$state.title,\n        content = _this$state.content,\n        status = _this$state.status;\n    const _this$props = this.props,\n          propContent = _this$props.propContent,\n          classType = _this$props.classType;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      size: \"small\",\n      className: classType,\n      variant: \"contained\",\n      color: \"default\"\n      /*onClick={this.toggle}*/\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(DoubleArrow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      keepMounted: true,\n      open: this.state.modal,\n      toggle: this.toggle,\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      component: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Card Title:\"), React.createElement(TextField, {\n      name: \"title\",\n      value: title,\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      conponent: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Card Details:\"), React.createElement(TextField, {\n      name: \"content\",\n      value: content,\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(FormLabel, {\n      conponent: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Status:\"), React.createElement(FormControl, {\n      component: \"fieldset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      component: \"color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Card Color:\"), React.createElement(RadioGroup, {\n      value: status,\n      \"aria-label\": \"status\",\n      name: \"status\",\n      id: \"status\",\n      onChange: this.handleInput.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      value: \"1\",\n      control: React.createElement(StyledRadio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }),\n      label: \"Backlog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      value: \"2\",\n      control: React.createElement(StyledRadio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }),\n      label: \"TODO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      value: \"3\",\n      control: React.createElement(StyledRadio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }),\n      label: \"In Progress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      value: \"4\",\n      control: React.createElement(StyledRadio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }),\n      label: \"Testing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      value: \"5\",\n      control: React.createElement(StyledRadio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }),\n      label: \"Completed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(IconButton, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(AssignmentInd, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), \" Created by: \", propContent.createdBy), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      height: \"35\",\n      alt: propContent.contributors[0].name + ' ' + propContent.contributors[0].lastName,\n      title: propContent.contributors[0].name + ' ' + propContent.contributors[0].lastName,\n      src: '../../public/assets/img' + propContent.contributors[0].profilePhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      onClick: () => this.handleClick(propContent._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Update, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), \"Update\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Close, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), \"Close\"))));\n  }\n\n}\n\nexport default ModalProject;","map":{"version":3,"sources":["D:/TIC5/Programmation Web .Net/Project/trello-app/src/components/modal.js"],"names":["React","Add","Close","CalendarToday","Schedule","DoubleArrow","Update","AssignmentInd","makeStyles","Button","IconButton","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","Slide","FormGroup","FormLabel","RadioGroup","Radio","FormControlLabel","TextField","StyledRadio","props","ModalProject","Component","constructor","state","modal","title","propContent","content","status","color","toggle","bind","handleInput","e","setState","target","name","value","console","log","render","classType","className","createdBy","contributors","lastName","profilePhoto","handleClick","_id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Add, Close, CalendarToday, Schedule, DoubleArrow, Update, AssignmentInd } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, IconButton, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, Slide, FormGroup, FormLabel, RadioGroup, Radio, FormControlLabel, TextField } from '@material-ui/core';\r\n//import moment from 'moment'\r\n//import axios from 'axios'\r\n\r\nfunction StyledRadio(props) {\r\n    return (\r\n        <Radio\r\n            disableRipple\r\n            color=\"default\"\r\n            {...props}\r\n        />\r\n    );\r\n}\r\n\r\nclass ModalProject extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false,\r\n            title: this.props.propContent.title,\r\n            content: this.props.propContent.content,\r\n            status: this.props.propContent.status,\r\n            color: this.props.propContent.color\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n    handleInput(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n        console.log(this.state.title)\r\n    }\r\n    // handleClick = id => {\r\n    //     axios.put(`/cards/update/${id}`, {\r\n    //         title: this.state.title,\r\n    //         content: this.state.content,\r\n    //         status: this.state.status\r\n    //     })\r\n    //         .then((response) => {\r\n    //             if (response.data.message)\r\n    //                 alert(response.data.message)\r\n    //             else {\r\n    //                 this.toggle();\r\n    //                 this.setState({\r\n    //                     title: null,\r\n    //                     content: null,\r\n    //                     loading: false\r\n    //                 })\r\n    //             }\r\n    //             console.log(response);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.log(error);\r\n    //         });\r\n\r\n    // }\r\n    // toggle() {\r\n    //     this.setState({\r\n    //         modal: !this.state.modal\r\n    //     });\r\n    // }\r\n\r\n    render() {\r\n        let { title, content, status } = this.state;\r\n        const { propContent, classType } = this.props;\r\n        return (\r\n            <div>\r\n                <IconButton size=\"small\" className={classType} variant=\"contained\" color=\"default\" /*onClick={this.toggle}*/><DoubleArrow /></IconButton>\r\n                <Dialog keepMounted open={this.state.modal} toggle={this.toggle} className={this.props.className} >\r\n                    <DialogTitle toggle={this.toggle} >\r\n                        <FormLabel component=\"title\">Card Title:</FormLabel>\r\n                        <TextField name=\"title\" value={title} onChange={this.handleInput.bind(this)} />\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <FormGroup>\r\n                            <FormLabel conponent=\"content\">Card Details:</FormLabel>\r\n                            <TextField name=\"content\" value={content} onChange={this.handleInput.bind(this)} />\r\n                        </FormGroup>\r\n                        <FormLabel conponent=\"status\">Status:</FormLabel>\r\n                        <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"color\">Card Color:</FormLabel>\r\n                            <RadioGroup value={status} aria-label=\"status\" name=\"status\" id=\"status\" onChange={this.handleInput.bind(this)}>\r\n                                <FormControlLabel value=\"1\" control={<StyledRadio />} label=\"Backlog\" />\r\n                                <FormControlLabel value=\"2\" control={<StyledRadio />} label=\"TODO\" />\r\n                                <FormControlLabel value=\"3\" control={<StyledRadio />} label=\"In Progress\" />\r\n                                <FormControlLabel value=\"4\" control={<StyledRadio />} label=\"Testing\" />\r\n                                <FormControlLabel value=\"5\" control={<StyledRadio />} label=\"Completed\" />\r\n\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                        <hr />\r\n                        {/*<IconButton size=\"small\"><CalendarToday/></IconButton> Created Date: {moment(propContent.date).format(\"DD.MM.YYYY\")}<br />\r\n                        <IconButton size=\"small\"><Schedule /></IconButton> Due Date: {moment(propContent.dueDate).format(\"DD.MM.YYYY\")}<br /> */}\r\n                        <IconButton size=\"small\"><AssignmentInd /></IconButton> Created by: {propContent.createdBy}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <img height=\"35\" alt={propContent.contributors[0].name + ' ' + propContent.contributors[0].lastName} title={propContent.contributors[0].name + ' ' + propContent.contributors[0].lastName} src={'../../public/assets/img' + propContent.contributors[0].profilePhoto} />\r\n                        <Button variant=\"contained\" color=\"default\" onClick={() => this.handleClick(propContent._id)}><Update />Update</Button>\r\n                        <Button variant=\"contained\" color=\"default\" onClick={this.toggle}><Close />Close</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default ModalProject;"]},"metadata":{},"sourceType":"module"}